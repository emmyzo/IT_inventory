<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard | Olam Agri IT Inventory</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    body {
      background: #f8fafc;
      min-height: 100vh;
    }
    .sidebar {
      background: #fff;
      min-height: 100vh;
      box-shadow: 2px 0 8px rgba(0,0,0,0.04);
      padding: 2rem 1rem 1rem 1rem;
      position: fixed;
      left: 0;
      top: 0;
      width: 220px;
      z-index: 100;
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }
    .sidebar .logo {
      width: 50px;
      height: 30px;
      margin-bottom: 0.5rem;
    }
    .sidebar .brand-title {
      font-size: 1.5rem;
      font-weight: 700;
      color: #222;
      margin-bottom: 0.2rem;
      letter-spacing: -1px;
    }
    .sidebar .brand-sub {
      font-size: 1rem;
      font-weight: 700;
      color: #009688;
      margin-bottom: 1.2rem;
    }
    .sidebar-nav {
      list-style: none;
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: column;
      gap: 1.2rem;
    }
    .sidebar-nav li a {
      color: #222;
      text-decoration: none;
      font-weight: 600;
      font-size: 1.05rem;
      display: flex;
      align-items: center;
      gap: 0.7rem;
      padding: 0.4rem 0.7rem;
      border-radius: 6px;
      transition: background 0.2s, color 0.2s;
    }
    .sidebar-nav li a.active, .sidebar-nav li a:hover {
      background: #009688;
      color: #fff;
    }
    .main-content {
      margin-left: 220px;
      padding: 2rem 2rem 1rem 2rem;
    }
    .topbar {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 2rem;
    }
    .topbar .user-info {
      display: flex;
      align-items: center;
      gap: 1rem;
    }
    .topbar .user-avatar {
      width: 38px;
      height: 38px;
      border-radius: 50%;
      background: #e0e0e0;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.3rem;
      color: #009688;
      font-weight: 700;
    }
    .dashboard-cards {
      display: flex;
      gap: 1.5rem;
      flex-wrap: wrap;
      margin-bottom: 2rem;
    }
    .dashboard-card {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 2px 12px rgba(0,0,0,0.04);
      padding: 1.5rem 2rem;
      min-width: 220px;
      flex: 1 1 220px;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
    .dashboard-card .card-title {
      font-size: 1.1rem;
      font-weight: 600;
      color: #888;
    }
    .dashboard-card .card-value {
      font-size: 2rem;
      font-weight: 700;
      color: #009688;
    }
    .dashboard-card .card-icon {
      font-size: 2.2rem;
      color: #ffa726;
      margin-bottom: 0.5rem;
    }
    .table-section {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 2px 12px rgba(0,0,0,0.04);
      padding: 1.5rem 1.2rem;
      margin-bottom: 2rem;
    }
    .table-section .section-title {
      font-size: 1.2rem;
      font-weight: 700;
      color: #222;
      margin-bottom: 1rem;
    }
    @media (max-width: 900px) {
      .main-content { margin-left: 0; padding: 1rem; }
      .sidebar { position: static; width: 100%; min-height: auto; flex-direction: row; gap: 1rem; padding: 1rem; }
      .dashboard-cards { flex-direction: column; gap: 1rem; }
    }
    @media (max-width: 600px) {
      .main-content { padding: 0.5rem; }
      .sidebar { flex-direction: column; align-items: flex-start; }
      .dashboard-card { padding: 1rem; }
      .table-section { padding: 1rem 0.5rem; }
    }
  </style>
</head>
<body>
  <aside class="sidebar">
    <div style="display: flex; flex-direction: column; align-items: center; justify-content: center;">
      <img src="/images/olam_logo.png" alt="Olam Agri Logo" class="logo">
      <div class="brand-title" style="text-align: center;">Olam Agri</div>
      <div class="brand-sub" style="text-align: center;">IT Inventory</div>
    </div>
    <ul class="sidebar-nav">
      <li><a href="/admin/dashboard" class="<%= (activeTab === 'dashboard') ? 'active' : '' %>"><i class="fa fa-gauge"></i> Dashboard</a></li>
      <li><a href="/admin/users" class="<%= (activeTab === 'users') ? 'active' : '' %>"><i class="fa fa-users"></i> Users</a></li>
      <li><a href="/admin/active" class="<%= (activeTab === 'active') ? 'active' : '' %>"><i class="fa fa-gauge"></i> Active</a></li>
      <li><a href="/admin/spares" class="<%= (activeTab === 'spares') ? 'active' : '' %>"><i class="fa fa-archive"></i> Spares</a></li>
      <li><a href="/admin/scrap" class="<%= (activeTab === 'scrap') ? 'active' : '' %>"><i class="fa fa-recycle"></i> Scrap</a></li>
      <li><a href="/admin/deleted-items" class="<%= (activeTab === 'deleted-items') ? 'active' : '' %>"><i class="fa fa-trash"></i> Deleted Items</a></li>
      <li><a href="#" onclick="logout()"><i class="fa fa-sign-out-alt"></i> Logout</a></li>
    </ul>
  </aside>
  <main class="main-content">
    <div class="topbar">
      <h2 class="mb-0">Admin Dashboard</h2>
      <div class="user-info">
        <div class="user-avatar"><i class="fa fa-user"></i></div>
        <span class="fw-bold"><%= user && user.username ? user.username : 'Admin' %></span>
      </div>
    </div>
    <div class="dashboard-cards">
      <div class="dashboard-card">
        <div class="card-icon"><i class="fa fa-users"></i></div>
        <div class="card-title">Total Users</div>
        <div class="card-value" id="totalUsers">...</div>
      </div>
      <div class="dashboard-card">
        <div class="card-icon"><i class="fa fa-box"></i></div>
        <div class="card-title">Inventory Items</div>
        <div class="card-value" id="inventoryItems">...</div>
      </div>
      <div class="dashboard-card">
        <div class="card-icon"><i class="fa fa-laptop"></i></div>
        <div class="card-title">Active Devices</div>
        <div class="card-value" id="activeDevices">...</div>
      </div>
      <div class="dashboard-card">
        <div class="card-icon"><i class="fa fa-exclamation-triangle"></i></div>
        <div class="card-title">Inactive Devices</div>
        <div class="card-value" id="issues">...</div>
      </div>
      <div class="dashboard-card">
        <div class="card-icon"><i class="fa fa-laptop"></i></div>
        <div class="card-title">Laptops</div>
        <div class="card-value" id="cardLaptops">0</div>
      </div>
      <div class="dashboard-card">
        <div class="card-icon"><i class="fa fa-desktop"></i></div>
        <div class="card-title">Desktops</div>
        <div class="card-value" id="cardDesktops">0</div>
      </div>
      <div class="dashboard-card">
        <div class="card-icon"><i class="fa fa-tv"></i></div>
        <div class="card-title">Monitors</div>
        <div class="card-value" id="cardMonitors">0</div>
      </div>
      <div class="dashboard-card">
        <div class="card-icon"><i class="fa fa-print"></i></div>
        <div class="card-title">Printers</div>
        <div class="card-value" id="cardPrinters">0</div>
      </div>
    </div>
    <div class="table-section">
      <div class="section-title">Recent Users</div>
      <div class="table-responsive">
        <table class="table table-striped align-middle">
          <thead>
            <tr>
              <th>S/N</th>
              <th>Name</th>
              <th>Email</th>
              <th>Role</th>
              <th>Status</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="recentUsersBody">
            <!-- Dynamic rows will be injected here -->
          </tbody>
        </table>
      </div>
    </div>
  </main>
  <!-- Edit User Modal -->
  <div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <form id="editUserForm">
          <div class="modal-header">
            <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <input type="hidden" name="id" id="editUserId">
            <div class="mb-3"><label class="form-label">Name</label><input type="text" class="form-control" name="name" id="editUserName" required></div>
            <div class="mb-3"><label class="form-label">Email</label><input type="email" class="form-control" name="email" id="editUserEmail" required></div>
            <div class="mb-3"><label class="form-label">Role</label>
              <input type="text" class="form-control" name="role" id="editUserRole" readonly>
              <% if (user && user.role === 'SUPER_ADMIN') { %>
                <label class="form-label mt-2">Assign New Role</label>
                <select class="form-select" id="editUserRoleDropdown">
                  <option value="ADMIN">ADMIN</option>
                  <option value="USER">USER</option>
                </select>
              <% } %>
            </div>
            <div class="mb-3"><label class="form-label">Location</label><input type="text" class="form-control" name="location" id="editUserLocation" required></div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary">Save Changes</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  <!-- Delete User Modal -->
  <div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deleteUserModalLabel">Delete User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Are you sure you want to delete this user?
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-danger" id="confirmDeleteUserBtn">Delete</button>
        </div>
      </div>
    </div>
  </div>
  <!-- Success Alert -->
  <div id="deleteSuccessAlert" class="alert alert-success position-fixed top-0 end-0 m-3 d-none" role="alert" style="z-index: 2000;">
    User deleted successfully!
  </div>
  <!-- Delete User Modal for Recent Users -->
  <div class="modal fade" id="deleteRecentUserModal" tabindex="-1" aria-labelledby="deleteRecentUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deleteRecentUserModalLabel">Delete User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="deleteRecentUserModalBody">
          Are you sure you want to delete this user?
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-danger" id="confirmDeleteRecentUserBtn">Delete</button>
        </div>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    async function fetchDashboardStats() {
      // Fetch users list and update total users
      const res = await fetch('/api/users-list');
      if (!res.ok) return;
      const users = await res.json();
      document.getElementById('totalUsers').textContent = users.length;

      // Fetch all inventory items for all user profiles (real-time, unified logic)
      const invRes = await fetch('/api/inventory');
      if (!invRes.ok) return;
      const items = await invRes.json();
      // Normalize deviceType for case-insensitivity
      const norm = v => (v || '').toLowerCase();
      // Total inventory items (active + inactive)
      document.getElementById('inventoryItems').textContent = items.length;
      // Active devices
      document.getElementById('activeDevices').textContent = items.filter(i => i.status === 'active' || !i.status).length;
      // Inactive devices
      document.getElementById('issues').textContent = items.filter(i => i.status === 'inactive').length;
      // Device type cards (case-insensitive)
      document.getElementById('cardLaptops').textContent = items.filter(i => norm(i.deviceType) === 'laptop').length;
      document.getElementById('cardDesktops').textContent = items.filter(i => norm(i.deviceType) === 'desktop').length;
      document.getElementById('cardMonitors').textContent = items.filter(i => norm(i.deviceType) === 'monitor').length;
      document.getElementById('cardPrinters').textContent = items.filter(i => norm(i.deviceType) === 'printer').length;
    }
    fetchDashboardStats();

    async function fetchRecentUsers() {
      const res = await fetch('/admin/dashboard/recent-users');
      if (!res.ok) return;
      const users = await res.json();
      const tbody = document.getElementById('recentUsersBody');
      tbody.innerHTML = '';
      users.forEach((u, i) => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${i + 1}</td>
          <td>${u.name}</td>
          <td>${u.email}</td>
          <td>${u.role.replace('_', ' ')}</td>
          <td><span class="badge bg-success">${u.status}</span></td>
          <td>
            <button class="btn btn-sm btn-primary" onclick='openEditUserModal(${JSON.stringify(u)})' ${u.role === 'SUPER_ADMIN' ? 'disabled' : ''}><i class="fa fa-edit"></i></button>
          </td>
        `;
        tbody.appendChild(tr);
      });
    }
    fetchRecentUsers();

    // Modal logic
    function openEditUserModal(user) {
      if (user.role === 'SUPER_ADMIN') return;
      document.getElementById('editUserId').value = user.id;
      document.getElementById('editUserName').value = user.name;
      document.getElementById('editUserEmail').value = user.email;
      document.getElementById('editUserRole').value = user.role;
      document.getElementById('editUserLocation').value = user.location || '';
      var dropdown = document.getElementById('editUserRoleDropdown');
      if (dropdown) {
        dropdown.value = user.role;
      }
      new bootstrap.Modal(document.getElementById('editUserModal')).show();
    }
    function openDeleteUserModal(id, role) {
      if (role === 'SUPER_ADMIN') return;
      document.getElementById('confirmDeleteUserBtn').setAttribute('data-id', id);
      new bootstrap.Modal(document.getElementById('deleteUserModal')).show();
    }
    document.getElementById('editUserForm').onsubmit = async function(e) {
      e.preventDefault();
      const id = document.getElementById('editUserId').value;
      const name = document.getElementById('editUserName').value;
      const email = document.getElementById('editUserEmail').value;
      let role = document.getElementById('editUserRole').value;
      var dropdown = document.getElementById('editUserRoleDropdown');
      if (dropdown) {
        role = dropdown.value;
      }
      const location = document.getElementById('editUserLocation').value;
      await fetch(`/admin/users/${id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, email, role, location })
      });
      bootstrap.Modal.getInstance(document.getElementById('editUserModal')).hide();
      fetchRecentUsers();
    };
    document.getElementById('confirmDeleteUserBtn').onclick = async function() {
      const id = this.getAttribute('data-id');
      await fetch(`/admin/users/${id}`, { method: 'DELETE' });
      bootstrap.Modal.getInstance(document.getElementById('deleteUserModal')).hide();
      // Show success alert
      const alert = document.getElementById('deleteSuccessAlert');
      alert.classList.remove('d-none');
      setTimeout(() => alert.classList.add('d-none'), 2000);
      fetchRecentUsers();
    };

    let recentUserToDelete = null;
    function openDeleteRecentUserModal(btn) {
      recentUserToDelete = btn.getAttribute('data-id');
      const name = btn.getAttribute('data-name');
      document.getElementById('deleteRecentUserModalBody').textContent = `Are you sure you want to delete user '${name}'?`;
      new bootstrap.Modal(document.getElementById('deleteRecentUserModal')).show();
    }
    document.getElementById('confirmDeleteRecentUserBtn').onclick = async function() {
      if (!recentUserToDelete) return;
      const btn = this;
      btn.disabled = true;
      btn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Deleting...';
      try {
        const res = await fetch(`/api/users/${recentUserToDelete}`, { method: 'DELETE' });
        if (res.ok) {
          fetchRecentUsers();
          bootstrap.Modal.getInstance(document.getElementById('deleteRecentUserModal')).hide();
        } else {
          const err = await res.json();
          alert(err.error || 'Failed to delete user');
        }
      } catch (err) {
        alert('Network error');
      }
      btn.disabled = false;
      btn.innerHTML = 'Delete';
      recentUserToDelete = null;
    };

    function logout() {
      localStorage.clear();
      window.location.href = '/logout';
    }
  </script>
</body>
</html> 